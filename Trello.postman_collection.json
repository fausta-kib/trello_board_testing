{
	"info": {
		"_postman_id": "ffbcf818-df95-4760-aa3a-5547e2549bb6",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18560117"
	},
	"item": [
		{
			"name": "BOARDS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var companies = pm.environment.get(\"companies\");",
							"console.log(\"Fetching companies \" + companies);",
							"if (companies != '') {",
							"    postman.setNextRequest(\"BOARDS\");",
							"    console.log(\"BOARDS\");",
							"} else {",
							"    postman.setNextRequest(null);   ",
							"    console.log(\"null\"); ",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var companies = pm.environment.get(\"companies\");",
							"",
							"if (!companies || companies == ''){",
							"companies = [\"Pokemonas\", \"Gozzila\", \"Hokis\"];",
							"console.log(\"companies \" + companies);",
							"}",
							"",
							"var currentCompany = companies.shift();",
							"console.log(\"currentCompany \" + currentCompany);",
							"",
							"console.log(\"companies left \" + companies);",
							"pm.environment.set(\"company\", currentCompany);",
							"pm.environment.set(\"companies\", companies);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{company}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "{{boardName}}",
							"disabled": true
						},
						{
							"key": "defaultLists",
							"value": "false",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Board should be created\", function(){",
							"    pm.expect(response.name).to.eql(pm.environment.get(\"boardName\"));",
							"    pm.expect(response.closed).to.equal(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function(){",
							"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\");",
							"})",
							"",
							"pm.environment.set(\"boardId\", response.id);",
							"pm.environment.set(\"organizationId\", response.idOrganization);",
							"",
							"pm.environment.unset(\"boardName\");",
							"pm.environment.unset(\"boardNameNumber\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"boardNameNumber\", parseInt(Math.random() * 10));",
							"pm.environment.set(\"boardName\", \"My Board \" + pm.environment.get(\"boardNameNumber\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards?key={{trelloKey}}&token={{trelloToken}}&name={{boardName}}&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"List should be created\", function(){",
							"    pm.expect(response.name).to.eql(\"DONE\");",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the right board\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"doneListId\", response.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:idBoard/lists?key={{trelloKey}}&token={{trelloToken}}&name=DONE",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":idBoard",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false",
							"disabled": true
						},
						{
							"key": "name",
							"value": "DONE"
						}
					],
					"variable": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"List should be created\", function(){",
							"    pm.expect(response.name).to.eql(\"TODO\");",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the right board\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"todoListId\", response.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:idBoard/lists?key={{trelloKey}}&token={{trelloToken}}&name=TODO",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":idBoard",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false",
							"disabled": true
						},
						{
							"key": "name",
							"value": "TODO"
						}
					],
					"variable": [
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a card in TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Created card is active\", function(){",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Created card is in the right board and list\", function(){",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"todoListId\"));",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"cardId\", response.id);",
							"pm.environment.unset(\"todoListId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{trelloKey}}&token={{trelloToken}}&idList={{todoListId}}&name=Testing card moving",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "name",
							"value": "Testing card moving"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"pm.test(\"Moved card is active\", function(){",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Card is moved to Done column\", function(){",
							"pm.expect(response.idList).to.eql(pm.environment.get(\"doneListId\"));",
							"});",
							"",
							"pm.environment.unset(\"doneListId\");",
							"pm.environment.unset(\"cardId\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListId}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Organization boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var response = pm.response.json();",
							"",
							"",
							"if (response.length == []){",
							"    postman.setNextRequest(null);",
							"    console.log(\"Nothing to delete\");",
							"    pm.environment.unset(\"BoardIdDelete\");",
							"    pm.environment.unset(\"boardId\");",
							"    pm.environment.unset(\"organizationId\");",
							"} else {",
							"    pm.environment.set(\"BoardIdDelete\", response[0].id);    ",
							"    console.log(\"deleting \" + response[0].name);",
							"    postman.setNextRequest(\"Delete Board\");",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/organizations/{{organizationId}}/boards/?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"organizations",
						"{{organizationId}}",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"postman.setNextRequest(\"Organization boards\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{BoardIdDelete}}?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{BoardIdDelete}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "key",
			"value": "7234d3aea073a0a432d70f8754e030e1"
		},
		{
			"key": "token",
			"value": "4989b9a5089da4b163ba3998efd598d7ba3ded0b8fadf38380052fc33cdbcd4b"
		}
	]
}